(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{232:function(v,_,a){"use strict";a.r(_);var l=a(2),t=Object(l.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"目标检测基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标检测基础","aria-hidden":"true"}},[v._v("#")]),v._v(" 目标检测基础")]),v._v(" "),a("p",[v._v("计算机视觉：")]),v._v(" "),a("p",[v._v("​\t目标检测，图像分类，物体定位，图像分割等")]),v._v(" "),a("p",[v._v("目标检测算法可以分为两类：")]),v._v(" "),a("ul",[a("li",[v._v("基于Region Proposal的R-CNN系列算法（R-CNN， Fast R-CNN， FasterR-CNN）\n"),a("ul",[a("li",[v._v("它们是two-stage的，需要先使用启发式方法（selective search）或者CNN网络（RPN）产生Region Proposal，然后再在Region Proposal上做分类与回归.")])])]),v._v(" "),a("li",[v._v("YOLO,SSD这类one-stage算法\n"),a("ul",[a("li",[v._v("其仅仅使用一个CNN网络直接预测不同目标的类别与位置。")])])]),v._v(" "),a("li",[v._v("第一类方法是准确度高一些，但是速度慢，但是第二类算法是速度快，但是准确性要低一些。")])]),v._v(" "),a("p",[v._v("名词解释：")]),v._v(" "),a("p",[v._v("YOLO：You Only Look Once: Unified, Real-Time Object Detection")]),v._v(" "),a("p",[v._v("SSD：")]),v._v(" "),a("p",[v._v("NMS：non maximum suppression, 非极大值抑制算法")]),v._v(" "),a("ul",[a("li",[v._v("首先从所有的检测框中找到置信度最大的那个框，然后挨个计算其与剩余框的IOU，如果其值大于一定阈值（重合度过高），那么就将该框剔除；然后对剩余的检测框重复上述过程，直到处理完所有的检测框。Yolo预测过程也需要用到NMS算法。")])]),v._v(" "),a("h3",{attrs:{id:"yolo："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yolo：","aria-hidden":"true"}},[v._v("#")]),v._v(" YOLO：")]),v._v(" "),a("p",[v._v("优点：")]),v._v(" "),a("ul",[a("li",[v._v("Yolo采用一个CNN网络来实现检测，是单管道策略，其训练与预测都是end-to-end，所以Yolo算法比较简洁且速度快。")]),v._v(" "),a("li",[v._v("Yolo是对整张图片做卷积，所以其在检测目标有更大的视野，它不容易对背景误判。")]),v._v(" "),a("li",[v._v("YOLO泛化能力强，在做迁移时，模型鲁棒性高。")])]),v._v(" "),a("p",[v._v("缺点：")]),v._v(" "),a("ul",[a("li",[v._v("Yolo各个单元格仅仅预测两个边界框，而且属于一个类别。因此YOLO不擅长检测小物体。（SSD，其采用多尺度单元格。也可以看Faster R-CNN，其采用了anchor boxes。）")]),v._v(" "),a("li",[v._v("对物体的宽高比方面泛化率低，无法定位不寻常比例的物体。")]),v._v(" "),a("li",[v._v("定位不准确")])]),v._v(" "),a("h3",{attrs:{id:"yolov2改进："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yolov2改进：","aria-hidden":"true"}},[v._v("#")]),v._v(" YOLOv2改进：")]),v._v(" "),a("p",[v._v("YOLOv1虽然检测速度很快，但是在检测精度上却不如R-CNN系检测方法，YOLOv1在物体定位方面（localization）不够准确，并且召回率（recall）较低。")]),v._v(" "),a("ul",[a("li",[v._v("YOLOv2采用anchor boxes和卷积做预测，与单尺度特征图的SSD类似")]),v._v(" "),a("li",[v._v("YOLOv2的一大创新是采用Multi-Scale Training策略，这样同一个模型其实就可以适应多种大小的图片了。")])]),v._v(" "),a("h3",{attrs:{id:"yolo9000："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yolo9000：","aria-hidden":"true"}},[v._v("#")]),v._v(" YOLO9000：")]),v._v(" "),a("p",[v._v("YOLO9000是在YOLOv2的基础上提出的一种可以检测超过9000个类别的模型，其主要贡献点在于提出了一种分类和检测的联合训练策略。")]),v._v(" "),a("h3",{attrs:{id:"yolov3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yolov3","aria-hidden":"true"}},[v._v("#")]),v._v(" YOLOv3")]),v._v(" "),a("ul",[a("li",[v._v("使用残差模型")]),v._v(" "),a("li",[v._v("采用FPN架构（）")])]),v._v(" "),a("p",[v._v("SSD在YOLO基础上做了三点改进")]),v._v(" "),a("ul",[a("li",[v._v("多尺度特征图")]),v._v(" "),a("li",[v._v("利用卷积进行检测")]),v._v(" "),a("li",[v._v("设置先验框")])]),v._v(" "),a("p",[v._v("对比：SSD在准确度上比YOLO更好，小目标的检测效果更好。")])])}),[],!1,null,null,null);_.default=t.exports}}]);